/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'bragason' at '10/22/15 6:36 PM' with Gradle 2.8
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.8/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'



mainClassName = "com.btfc.tictactoe.Controller"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


sourceSets {
  selenium
  seleniumXvfb
}


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'com.sparkjava:spark-core:2.3'
	compile 'junit:junit:4.12'



    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    compile group: 'net.sf.opencsv', name: 'opencsv', version: '2.+'
	//compile 'com.google.code.gson:gson:2.2.4'
	compile 'com.sparkjava:spark-template-freemarker:2.3'
	compile 'br.com.thiagomoreira.liferay.plugins.markdown-display-app:markdown-display-app:1.0.0'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    //Selenium test dependencies
    seleniumCompile 'junit:junit:4.11'
    seleniumCompile 'org.seleniumhq.selenium:selenium-java:2.48.2'
    seleniumXvfbCompile 'junit:junit:4.11'
    seleniumXvfbCompile 'org.seleniumhq.selenium:seleniumjava:2.48.2'

   


}

String port = System.getenv("PORT");
if (port != null) {
    setPort(Integer.valueOf(port));
}

buildscript {
    repositories {
	jcenter()
	maven { url 'http://dl.bintray.com/content/aalmiray/kordamp' }
    }
    dependencies {
	classpath 'org.kordamp:markdown-gradle-plugin:1.0.0'
    }
}

apply plugin: 'org.kordamp.markdown.convert'


apply plugin: 'checkstyle'
tasks.withType(Checkstyle) {ignoreFailures = true }

task selenium(type: Test, dependsOn: installDist) {
    testClassesDir = sourceSets.selenium.output.classesDir
    classpath = sourceSets.selenium.runtimeClasspath
}

task seleniumXvfb(type: Test, dependsOn: installDist) {

    testClassesDir = sourceSets.selenium.output.classesDir
    classpath = sourceSets.selenium.runtimeClasspath
    environment "DISPLAY", ":99"
    doFirst {
        'bin/xvfb start'.execute()
        'build/install/ticTacToe/bin/ticTacToe  &'.execute()
    }  
    doLast {
        'sh -e /etc/init.d/xvfb stop'.execute()
    }
}
